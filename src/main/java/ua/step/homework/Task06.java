package ua.step.homework;

import java.util.Stack;

/**
 *
 * Напишите метод, проверяющую правильность расстановки скобок в строке
 * введённой с клавиатуры. При правильной расстановке выполняются условия: 
 * • количество открывающих и закрывающих скобок равно. 
 * • внутри любой пары открывающая – соответствующая закрывающая скобка, скобки расставлены
 * правильно. В строке могут присутствовать скобки как круглые, так и квадратные
 * скобки (и др. символы). Каждой открывающей скобке соответствует закрывающая
 * того же типа (круглой – круглая, квадратной - квадратная).
 * Пример неправильной расстановки:
 * ( [ a) b]. Пример правильных входных данных (a[b](f[(g)(g)]))
 * Программа должна вывести результат в виде сообщения, примеры:
 *  • Правильная строка 
 *  • Ошибка отсутствие ( 
 *  • Ошибка отсутствие [
 * 
 */
public class Task06 {
	public static void main(String[] args) {
		System.out.printf("%d %d %d %d",(int) '(', (int) ')', (int) '[', (int) ']');
		checkBrackets("( [ a) b]");
		checkBrackets("(a[b](f[(g)(g)]))");
		checkBrackets("(abc[a]y)xx[am](");
	}

	/**
	 * Метод проверяет правильность расстановки скобок
	 * @param str - входная строка со скобками
	 */
	static void checkBrackets(String str) {

		char ansver = '*';
		Stack<Character> stack = new Stack<>();
		for (int i = 0; i < str.length(); i++) {
			//проверим строку на открытие скопок, и положим в стек если да + переход к следующему индексу строки
			if (str.charAt(i) == '(' || str.charAt(i) == '['){
				stack.push(str.charAt(i));
				continue;
			}
			//Поверим строку на закрывающиеся скопки
			if (str.charAt(i) == ')' || str.charAt(i) == ']'){
				//удалим из стека если совпадает + переход к следующему индексу строки
				if (stack.peek() == '(' && ')' == str.charAt(i)){
					stack.pop();
					continue;
				}
				if (stack.peek() == '[' && ']' == str.charAt(i)){
					stack.pop();
					continue;
				}
				// если не совпадает запоминаем ответ и выходим из цикла
				if (str.charAt(i) == ')'){
					ansver = '(';
				}
				else{
					ansver = '[';
				}
				break;
			}
		}
		//проверка что не пуст при не нахождении ошибки, если да запоминаем ответ
		if (!stack.empty() && ansver == '*'){
			if (stack.peek() == '('){ansver = ')';}
			else{ansver = ']';}
		}
		//выводим ответ на экран
		if (ansver == '*'){System.out.println("Правильная строка");}
		else{System.out.println("Ошибка отсутствие " + ansver);}

		//word.substring(0, 1);
		//value = String.valueOf(0.5);
	}
}
